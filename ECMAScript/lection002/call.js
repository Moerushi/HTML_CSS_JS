// Объект Roomba - робот-пылесос. Код самого объекта смотри в листинге 1.
// Обращение к свойствам объекта.
console.log(Roomba.model); // "Romba-1"
console.log(Roomba.isFull); // false
// Вызов методов объекта.
// Вызов метода объекта через call с явной передачей объекта робота-пылесоса в качестве контекста.
Roomba.startCleaning.call(Roomba); // I am cleaning... I have started:  1 times.
// Тут этот пример не очень показателен, т.к. Мы и так имели доступ к объекту, а внутри setTimeout использовать call возможно только обернув все это в анонимную функцию, но тоже бессмысленно, потому что тогда мы снова имеем доступ к объекту, как видели в прошлом примере. Но мы можем передать в call другой объект и увидеть что функция вызывается в контексте другого объекта:
// Создадим фиктивный объект робота, который содержит только одно свойство, необходимое для работы функции и сразу же зададим ему первоначальное значение, отличное от того, которое задано у робота, для наглядности.
const notARobot = {
   counterOfStarts: 10,
};
Roomba.startCleaning.call(notARobot); // I am cleaning... I have been started:  11 times.